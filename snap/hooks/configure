#!/bin/bash
set -euo pipefail

source "${SNAP}/include/hook-common"

config_changes=0
default_theme_option="light"
osk_gtk_theme_file="$SNAP_DATA/osk-gtk-theme.txt"

osk_layouts=( $( validate_layouts $( snapctl get layout | tr ',' ' ' ) ) )
invalid_layouts=( $( uniqu $( snapctl get layout | tr ',' ' ' ) "${osk_layouts[@]}" ) )
if [ ! -z "${invalid_layouts+x}" ]; then
  echo "Error: Invalid layout IDs: $( join " " ${invalid_layouts[@]} )" >&2
  echo "       See $SNAP_NAME.list-layouts for a list of valid layouts." >&2
  exit 1
fi
layouts_changed="$( set_layouts "${osk_layouts[@]}" )"

if [ "${layouts_changed}" == "yes" ]; then
  let config_changes+=1
fi

osk_theme_option="$(snapctl get theme)"
if [ -z "${osk_theme_option}" ]; then
  snapctl set "theme=${default_theme_option}"
  osk_theme_option="${default_theme_option}"
fi

declare -A themes=(
  [light]=Yaru
  [dark]=Yaru-dark
  [bark]=Yaru-bark
  [bark-dark]=Yaru-bark-dark
  [blue]=Yaru-blue
  [blue-dark]=Yaru-blue-dark
  [dark]=Yaru-dark
  [magenta]=Yaru-magenta
  [magenta-dark]=Yaru-magenta-dark
  [olive]=Yaru-olive
  [olive-dark]=Yaru-olive-dark
  [prussiangreen]=Yaru-prussiangreen
  [prussiangreen-dark]=Yaru-prussiangreen-dark
  [purple]=Yaru-purple
  [purple-dark]=Yaru-purple-dark
  [red]=Yaru-red
  [red-dark]=Yaru-red-dark
  [sage]=Yaru-sage
  [sage-dark]=Yaru-sage-dark
  [viridian]=Yaru-viridian
  [viridian-dark]=Yaru-viridian-dark
)

if [[ -z "${themes[${osk_theme_option}]:-}" ]]; then
  echo "Error: invalid theme option ${osk_theme_option}, should be one of" "${!themes[@]}" >&2
  exit 1
fi
if [ "$(cat "${osk_gtk_theme_file}")" != "${themes[${osk_theme_option}]}" ]; then
  echo "${themes[${osk_theme_option}]}" > "${osk_gtk_theme_file}"
  let config_changes+=1
fi

# (Re)start the daemon
case "$(snapctl get daemon)" in
  true)
    if snapctl services "$SNAP_INSTANCE_NAME.daemon" | grep -q inactive; then
      snapctl start --enable "$SNAP_INSTANCE_NAME.daemon" 2>&1 || true
    elif [ $config_changes -gt 0 ]; then
      snapctl restart "$SNAP_INSTANCE_NAME.daemon" || true
    fi
    ;;
  false)
    snapctl stop --disable "$SNAP_INSTANCE_NAME.daemon" 2>&1 || true
    ;;
  *)
    echo "Error: invalid daemon option, should be 'true' or 'false'" >&2
    exit 1
    ;;
esac
